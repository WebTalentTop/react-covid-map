{"version":3,"sources":["components/DeleteDialog.js","components/EditDialog.js","components/TableView.js","components/MapView.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteDialog","open","handleClose","handleDelete","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","useStyles","makeStyles","text","width","marginBottom","marginRight","EditDialog","handleEdit","record","currentId","setEdit","classes","TextField","label","value","location","className","onChange","e","target","InputLabelProps","shrink","type","lat","lng","count","_id","timerID","columns","minWidth","root","container","maxHeight","content","padding","TableView","casesData","onDelete","onAdd","onUpdate","zoom","center","greenIcon","useState","page","setPage","rowsPerPage","setRowsPerPage","React","openDelete","setOpenDelete","openEdit","setOpenEdit","setCurrentId","currentPos","setCurrentPos","currentCount","setCurrentCount","currentRecord","setCurrentRecord","currentLocation","setCurrentLocation","cityState","setCityState","bounds","setBounds","boundOptions","setBoundOptions","rangeData","setRangeData","latlng","a","fetch","result","json","data","address","display_name","console","error","useEffect","map","item","Object","assign","title","payload","JSON","stringify","getBounds","length","rangeDataFiltered","filter","sum","reduce","prev","curr","total","Autocomplete","options","getOptionLabel","option","v","boundArr","parse","boundingbox","Array","isArray","handleBounds","onInputChange","event","newInputValue","clearTimeout","setTimeout","handleSearch","style","renderInput","params","Map","getAddress","TileLayer","url","Marker","position","Popup","icon","Rectangle","info","latLng","newRecord","alert","find","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","slice","row","hover","role","tabIndex","moment","Date","format","toString","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","comparisonFn","prevProps","nextProps","memo","MapView","defaultRadius","radius","setRadius","setTotal","totalRect","setTotalRect","latlngA","L","LatLng","availableData","latlngRecord","distanceTo","defaultValue","Circle","fillColor","ENDPOINT","process","PORT","socket","socketIOClient","TabPanel","props","children","index","other","hidden","Box","p","mapConfig","Icon","extend","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","iconUrl","shadowUrl","Main","setCasesData","setValue","emit","on","x","y","isEmpty","xorWith","isEqual","Paper","square","Tabs","indicatorColor","textColor","newValue","Tab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.057de4f0.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function DeleteDialog({ open, handleClose, handleDelete }) {\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete Confirm</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to delete the record?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color=\"primary\" autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  text: {\n    width: '100%',\n    marginBottom: 16,\n    marginRight: 16\n  }\n});\n\n\nexport default function EditDialog({ open, handleClose, handleEdit, record, currentId, setEdit }) {\n  const classes = useStyles();\n  // const [currentLocation, setCurrentLocation] = useState('');\n  // const [currentCount, setCurrentCount] = useState(0);\n  // const [currentLat, setCurrentLat] = useState(0);\n  // const [currentLng, setCurrentLng] = useState(0);\n\n  // useEffect(() => {\n  //   if (record && record.location) setCurrentLocation(record.location);\n  //   if (record && record.count) setCurrentCount(record.count);\n  //   if (record && record.lat) setCurrentLat(record.lat);\n  //   if (record && record.lng) setCurrentLng(record.lng);\n  // }, [record]);\n  \n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Edit form</DialogTitle>\n        <DialogContent>\n        <TextField\n          label=\"Location\"\n          value={record && record.location}\n          className={classes.text}\n          onChange={e => setEdit({ location: e.target.value })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Latitude\"\n          type=\"number\"\n          className={classes.text}\n          value={record && record.lat}\n          onChange={e => setEdit({ lat: e.target.value })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Longitude\"\n          type=\"number\"\n          className={classes.text}\n          value={record && record.lng}\n          onChange={e => setEdit({ lng: e.target.value })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Count\"\n          type=\"number\"\n          className={classes.text}\n          value={record && record.count}\n          onChange={e => setEdit({ count: e.target.value })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleEdit({\n            _id: currentId,\n            location: record && record.location,\n            count: record && record.count,\n            lat: record && record.lat,\n            lng: record && record.lng,\n          })} color=\"primary\" autoFocus>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport { Map, TileLayer, Marker, Popup, Rectangle } from \"react-leaflet\";\nimport ReactLeafletSearch from \"react-leaflet-search\";\nimport DeleteDialog from './DeleteDialog';\nimport EditDialog from './EditDialog';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst columns = [\n  { id: 'date', label: 'Last Update', minWidth: 170},\n  { id: 'location', label: 'Location', minWidth: 170 },\n  { id: 'count', label: 'Cases', minWidth: 170 },\n  { id: 'actions', label: 'Actions', minWidth: 170 },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  content: {\n    padding: 16\n  },\n  text: {\n    width: '100%',\n    marginBottom: 16,\n    marginRight: 16\n  }\n});\n\nconst WAIT_INTERVAL = 1000;\nlet timerID;\n\nconst TableView = function ({ casesData, onDelete, onAdd, onUpdate, zoom, center, greenIcon }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [currentId, setCurrentId] = useState(null);\n  const [currentPos, setCurrentPos] = useState(center);\n  const [currentCount, setCurrentCount] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [cityState, setCityState] = useState('');\n  const [bounds, setBounds] = useState([]);\n  const [boundOptions, setBoundOptions] = useState([]);\n  const [rangeData, setRangeData] = useState([]);\n  async function getAddress(latlng) {\n    try {\n      const result = await fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latlng.lat}&lon=${latlng.lng}`)\n      const data = await result.json();\n      if (data && data.address) {\n        setCurrentLocation(data.display_name)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  useEffect(() => {\n    async function getBounds() {\n      try {\n        const result = await fetch(`https://nominatim.openstreetmap.org/search.php?q=${cityState}&polygon_geojson=1&format=jsonv2`)\n        const data = await result.json();\n        setBoundOptions(data.map(item => Object.assign({}, { title: item.display_name, payload: JSON.stringify(item) })))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getBounds();\n  }, [cityState]);\n\n  useEffect(() => {\n    if (bounds.length > 0) {\n      const rangeDataFiltered = casesData\n        .filter(item => \n            item.lat>bounds[0][0] &&\n            item.lng>bounds[0][1] &&\n            item.lat<bounds[1][0] &&\n            item.lng<bounds[1][1]\n        );\n      setRangeData(rangeDataFiltered);\n    } else {\n      setRangeData(casesData);\n    }\n  }, [bounds, casesData]);\n\n  const handleClick = e => {\n    setCurrentPos(e.latlng);\n    getAddress(e.latlng);\n  }\n\n  const handleClickOpenDelete = (id) => {\n    setCurrentId(id);\n    setOpenDelete(true);\n  };\n\n\n  const handleClickOpenEdit = (id) => {\n    setCurrentId(id);\n    setCurrentRecord(rangeData.find(item => item._id === id))\n    setOpenEdit(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n  };\n\n  const handleDelete = () => {\n    setOpenDelete(false);\n    onDelete(currentId);\n  }\n\n  const handleEdit = (record) => {\n    setOpenEdit(false);\n    onUpdate(record);\n  }\n\n  const setEdit = (payload) => {\n    setCurrentRecord({ ...currentRecord, ...payload})\n  }\n\n  const handleAddNew = () => {\n    const newRecord = {\n      location: currentLocation,\n      count: currentCount,\n      lat: currentPos.lat,\n      lng: currentPos.lng,\n    };\n    if (currentLocation === '') {\n      alert('Location is empty. Please pick a location.');\n    } else {\n      onAdd(newRecord);\n    }\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleBounds = (v) => {\n    const boundArr = v && v.payload && JSON.parse(v.payload).boundingbox;\n    if (Array.isArray(boundArr) && boundArr.length>0) {\n      setBounds([ [boundArr[0], boundArr[2]], [boundArr[1], boundArr[3]] ]);\n    } else setBounds([])\n  }\n\n  const handleSearch = (newInputValue) => {\n    clearTimeout(timerID)\n    timerID = setTimeout(() => {\n      setCityState(newInputValue);\n    }, WAIT_INTERVAL)\n  }\n\n  const sum = rangeData.length > 0 && rangeData\n    .map(item => item.count)\n    .reduce((prev, curr) => prev + curr, 0);\n  const total = sum > 0 ? sum : 0;\n\n  return (\n    <div className={classes.root}>\n      <Autocomplete\n        id=\"combo-box-demo1\"\n        className={classes.text}\n        options={boundOptions}\n        getOptionLabel={(option) => option.title}\n        onChange={(e, v) => handleBounds(v)}\n        onInputChange={(event, newInputValue) => {\n          handleSearch(newInputValue);\n        }}\n        style={{ width: 300 }}\n        renderInput={(params) =>\n          <TextField\n            {...params}\n            label=\"Select city and state\"\n          />\n        }\n      />\n      <h2>Total Cases in rectangle range: {total}</h2>\n      <Map center={center} zoom={zoom} onClick={handleClick}>\n        <TileLayer\n            url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {currentPos &&\n          <Marker position={currentPos}>\n            <Popup position={currentPos}>\n              Current location: <pre>{JSON.stringify(currentPos, null, 2)}</pre>\n            </Popup>\n          </Marker>\n        }\n        {rangeData.map (item => \n          <Marker position={{ lat: item.lat, lng: item.lng}} icon={greenIcon}>\n            <Popup position={{ lat: item.lat, lng: item.lng}}>\n                <span>Location: {item.location}</span>\n                <pre>Cases: {item.count}</pre>\n            </Popup>\n          </Marker>\n        )}\n        {bounds.length > 0 &&\n          <Rectangle bounds={bounds} />\n        }\n        <ReactLeafletSearch\n          position=\"topright\"\n          onChange={(info) => {\n            setCurrentPos(info.latLng);\n            setCurrentLocation(info.info);\n          }}\n        />\n      </Map>\n      <section className={classes.content}>\n        <TextField\n          label=\"Location\"\n          value={currentLocation}\n          className={classes.text}\n          onChange={e => setCurrentLocation(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Latitude\"\n          type=\"number\"\n          className={classes.text}\n          value={currentPos && currentPos.lat}\n          onChange={e => setCurrentPos(e.target.value, currentPos.lng)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Longitude\"\n          type=\"number\"\n          className={classes.text}\n          value={currentPos && currentPos.lng}\n          onChange={e => setCurrentPos(currentPos.lat, e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Count\"\n          type=\"number\"\n          className={classes.text}\n          value={currentCount}\n          onChange={e => setCurrentCount(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <Button onClick={handleAddNew} color=\"primary\">\n          Add New\n        </Button>\n      </section>\n      <DeleteDialog\n        open={openDelete}\n        handleClose={handleCloseDelete}\n        handleDelete={handleDelete}\n      />\n      {rangeData && rangeData.find(item => item._id === currentId) &&\n        <EditDialog\n          open={openEdit}\n          currentId={currentId}\n          record={currentRecord}\n          handleClose={handleCloseEdit}\n          handleEdit={handleEdit}\n          setEdit={setEdit}\n        />\n      }\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Array.isArray(rangeData) && rangeData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    if (column.id === 'date') {\n                      return <TableCell key={`${column.id}-${row._id}`} align={column.align}>\n                        {moment(new Date(value)).format('YYYY/MM/DD HH:mm:ss').toString()}\n                      </TableCell>\n                    } else if (column.id !== 'actions') {\n                      return (\n                        <TableCell key={`${column.id}-${row._id}`} align={column.align}>\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      );\n                    } else {\n                      return (\n                        <TableCell key={`action-${row._id}`}>\n                          <Button onClick={() => handleClickOpenEdit(row._id)} color=\"primary\">\n                            Edit\n                          </Button>\n                          <Button onClick={() => handleClickOpenDelete(row._id)} color=\"primary\">\n                            Delete\n                          </Button>\n                        </TableCell>\n                      )\n                    }\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rangeData.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n  return prevProps.casesData === nextProps.casesData;\n};\n\nexport default React.memo(TableView, comparisonFn);","import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Circle, Popup, Rectangle } from \"react-leaflet\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport L from 'leaflet';\nimport ReactLeafletSearch from \"react-leaflet-search\";\n\nconst useStyles = makeStyles({\n  text: {\n    width: '100%',\n    marginBottom: 16,\n    marginRight: 16\n  }\n});\n\nconst WAIT_INTERVAL = 1000;\nlet timerID;\n\nexport default function MapView({ center, zoom, defaultRadius, casesData, greenIcon }) {\n  const classes = useStyles();\n  const [currentPos, setCurrentPos] = useState(center);\n  const [radius, setRadius] = useState(defaultRadius);\n  const [total, setTotal] = useState(0);\n  const [totalRect, setTotalRect] = useState(0);\n  const [cityState, setCityState] = useState('');\n  const [bounds, setBounds] = useState([]);\n  const [boundOptions, setBoundOptions] = useState([]);\n  const handleClick = e => {\n    setCurrentPos(e.latlng);\n  }\n\n  useEffect(() => {\n    if (!currentPos) return;\n\n    const latlngA = new L.LatLng(currentPos.lat, currentPos.lng);\n    \n    const availableData = casesData.filter(record => record.lat && record.lng);\n    if (availableData.length > 0) {\n      const rangeData = availableData\n        .filter(item => {\n          const latlngRecord = new L.LatLng(item.lat, item.lng);\n          return latlngA.distanceTo(latlngRecord) < radius\n        });\n      const sum = rangeData.length > 0 && rangeData\n        .map(item => item.count)\n        .reduce((prev, curr) => prev + curr, 0);\n      const total = sum > 0 ? sum : 0;\n      setTotal(total);\n    }\n  }, [radius, currentPos, casesData]);\n\n  useEffect(() => {\n    async function getBounds() {\n      try {\n        const result = await fetch(`https://nominatim.openstreetmap.org/search.php?q=${cityState}&polygon_geojson=1&format=jsonv2`)\n        const data = await result.json();\n        setBoundOptions(data.map(item => Object.assign({}, { title: item.display_name, payload: JSON.stringify(item) })))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getBounds();\n  }, [cityState]);\n\n  useEffect(() => {\n    if (bounds.length > 0) {\n      const rangeData = casesData\n        .filter(item => \n            item.lat>bounds[0][0] &&\n            item.lng>bounds[0][1] &&\n            item.lat<bounds[1][0] &&\n            item.lng<bounds[1][1]\n        );\n      const sum = rangeData.length > 0 && rangeData\n        .map(item => item.count)\n        .reduce((prev, curr) => prev + curr, 0);\n      const total = sum > 0 ? sum : 0;\n      setTotalRect(total);\n    }\n  }, [bounds, casesData]);\n\n  const handleBounds = (v) => {\n    const boundArr = v && v.payload && JSON.parse(v.payload).boundingbox;\n    if (Array.isArray(boundArr) && boundArr.length>0) {\n      setBounds([ [boundArr[0], boundArr[2]], [boundArr[1], boundArr[3]] ]);\n    } else {\n      setBounds([])\n    }\n  }\n\n  const handleSearch = (newInputValue) => {\n    clearTimeout(timerID)\n    timerID = setTimeout(() => {\n      setCityState(newInputValue);\n    }, WAIT_INTERVAL)\n  }\n  \n  return (\n    <div>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        className={classes.text}\n        options={boundOptions}\n        getOptionLabel={(option) => option.title}\n        onChange={(e, v) => handleBounds(v)}\n        onInputChange={(event, newInputValue) => {\n          handleSearch(newInputValue);\n        }}\n        style={{ width: 300 }}\n        renderInput={(params) =>\n          <TextField\n            {...params}\n            label=\"Select city and state\"\n          />\n        }\n      />\n      <TextField\n        label=\"Range\"\n        type=\"number\"\n        defaultValue={radius}\n        className={classes.text}\n        onChange={e => setRadius(e.target.value)}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <br />\n      <h2>Total Cases in circle range: {total}</h2>\n      <h2>Total Cases in rectangle range: {totalRect}</h2>\n      <br />\n      <Map center={center} zoom={zoom} onClick={handleClick}>\n        <TileLayer\n            url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {currentPos &&\n          <Marker position={currentPos}>\n            <Popup position={currentPos}>\n              Current location: <pre>{JSON.stringify(currentPos, null, 2)}</pre>\n            </Popup>\n            <Circle \n              center={{lat: currentPos.lat, lng: currentPos.lng}}\n              fillColor=\"blue\" \n              radius={radius}\n            />\n          </Marker>\n        }\n        {casesData.map (item => \n          <Marker position={{ lat: item.lat, lng: item.lng}} icon={greenIcon}>\n            <Popup position={{ lat: item.lat, lng: item.lng}}>\n                <span>Location: {item.location}</span>\n                <pre>Cases: {item.count}</pre>\n            </Popup>\n          </Marker>\n        )}\n        {bounds.length > 0 &&\n          <Rectangle bounds={bounds} />\n        }\n        <ReactLeafletSearch\n            position=\"topright\"\n            onChange={(info) => {\n              setCurrentPos(info.latLng);\n          }}\n        />\n      </Map>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport TableView from './TableView';\nimport MapView from './MapView';\nimport { isEmpty, isEqual, xorWith } from 'lodash';\nimport L from 'leaflet';\n\nimport socketIOClient from \"socket.io-client\"\n\nconst ENDPOINT = `https://boiling-tor-57674.herokuapp.com:${process.env.PORT}`;\nconst socket = socketIOClient(ENDPOINT);\nconst isArrayEqual = (x, y) => isEmpty(xorWith(x, y, isEqual));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst mapConfig = {\n  zoom: 12,\n  center: { lat: 40.719176490550595, lng: -73.98377895355226 },\n  radius: 3000\n};\n\nconst LeafIcon = L.Icon.extend({\n  options: {\n    iconSize:     [38, 95],\n    shadowSize:   [50, 64],\n    iconAnchor:   [22, 94],\n    shadowAnchor: [4, 62],\n    popupAnchor:  [-3, -76]\n  }\n});\n\nconst greenIcon = new LeafIcon({\n  iconUrl: 'http://leafletjs.com/examples/custom-icons/leaf-green.png',\n  shadowUrl: 'http://leafletjs.com/examples/custom-icons/leaf-shadow.png'\n});\n\nexport default function Main() {\n  const [casesData, setCasesData] = useState([])\n  const [value, setValue] = React.useState(0);\n\n  async function onDelete(id) {\n    socket.emit(\"delete-record\", id);\n  }\n\n  async function onUpdate(record) {\n    socket.emit(\"edit-record\", record);\n  }\n\n  async function onAdd(record) {\n    socket.emit(\"add-record\", record);\n  }\n\n  useEffect(() => {\n    socket.on(\"FromAPI\", data => {\n      if (!isArrayEqual(data, casesData)) \n        setCasesData(data);\n    });\n  });\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"Map View\" />\n        <Tab label=\"Edit View\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <MapView\n          casesData={casesData}\n          zoom={mapConfig.zoom}\n          defaultRadius={mapConfig.radius}\n          center={mapConfig.center}\n          greenIcon={greenIcon}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TableView\n          casesData={casesData}\n          onDelete={onDelete}\n          onUpdate={onUpdate}\n          onAdd={onAdd}\n          zoom={mapConfig.zoom}\n          center={mapConfig.center}\n          greenIcon={greenIcon}\n        />\n      </TabPanel>\n    </Paper>\n  )\n}\n\n","import Main from './components/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}